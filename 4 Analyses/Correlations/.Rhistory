install.packages("updateR")
install.packages("installr")
installr::updateR()
library(reshape)
install.packages("dplyr")
install.packages("reshape")
install.packages("ez")
install.packages("lrd")
install.packages("vectsects")
install.packages("Vectsects")
install.packages("VectSects")
install.packages("psych")
install.packages("Hmisc")
install.packages("PsychReport")
install.packages("psychReport")
install.packages("caret")
setwd("C:/Users/nickm/OneDrive/Documents/GitHub/BOI-Norms/4 Analyses/Correlations")
####Set up####
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
View(cue_table)
View(cue_table)
View(affs)
####Correlations####
##correlation between afs and fsg
fsg = subset(affs,
is.na(affs$FSG) == F )
View(fsg)
cos = subset(affs,
is.na(affs$cos) == F )
cos = subset(affs,
is.na(affs$COS) == F )
##FSG
corr.test(fsg$AFS, fsg$FSG)
##FSG
cor.test(fsg$AFS, fsg$FSG)
##scientific notation
options(scipen = 999)
##FSG
cor.test(fsg$AFS, fsg$FSG)
cor.test(fsg$AFSS, fsg$FSG)
##COS
cor.test(cos$AFS, cos$COS)
cor.test(cos$AFSS, cos$COS)
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(fsg$AFSS, fsg$FSG) #.08
View(affs)
View(cue_table)
View(affs)
####Single Word Norms####
combined = merge(cue_table, affs, by.x = "cues", by.y = "Cue")
View(combined)
####Set up####
##read in data
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
##scientific notation
options(scipen = 999)
####Correlations####
##make the subsets
fsg = subset(affs,
is.na(affs$FSG) == F )
cos = subset(affs,
is.na(affs$COS) == F )
###Correlations w/ double word norms
##FSG
cor.test(fsg$AFS, fsg$FSG) #.19
cor.test(fsg$AFSS, fsg$FSG) #-.08
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(cos$AFSS, cos$COS) #-.10
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
cuelist = unique(affs$cue)
View(affs)
cuelist = unique(affs$cue)
for(i in cuelist){
temp2 = subset(aff,
aff$cue == i)
temp2 = temp2[order(temp2$AFS, decreasing = TRUE),]
temp2 = temp2[1, ]
temp = rbind(temp2, temp)
}
####Set up####
##read in data
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
##scientific notation
options(scipen = 999)
####Correlations####
##make the subsets
fsg = subset(affs,
is.na(affs$FSG) == F )
cos = subset(affs,
is.na(affs$COS) == F )
###Correlations w/ double word norms
##FSG
cor.test(fsg$AFS, fsg$FSG) #.19
cor.test(fsg$AFSS, fsg$FSG) #-.08
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(cos$AFSS, cos$COS) #-.10
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
cuelist = unique(affs$cue)
for(i in cuelist){
temp2 = subset(affS,
affS$cue == i)
temp2 = temp2[order(temp2$AFS, decreasing = TRUE),]
temp2 = temp2[1, ]
temp = rbind(temp2, temp)
}
aff2 = temp
cuelist = unique(affs$Cue)
####Set up####
##read in data
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
##scientific notation
options(scipen = 999)
####Correlations####
##make the subsets
fsg = subset(affs,
is.na(affs$FSG) == F )
cos = subset(affs,
is.na(affs$COS) == F )
###Correlations w/ double word norms
##FSG
cor.test(fsg$AFS, fsg$FSG) #.19
cor.test(fsg$AFSS, fsg$FSG) #-.08
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(cos$AFSS, cos$COS) #-.10
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
cuelist = unique(affs$Cue)
for(i in cuelist){
temp2 = subset(affS,
affS$Cue == i)
temp2 = temp2[order(temp2$AFS, decreasing = TRUE),]
temp2 = temp2[1, ]
temp = rbind(temp2, temp)
}
####Set up####
##read in data
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
##scientific notation
options(scipen = 999)
####Correlations####
##make the subsets
fsg = subset(affs,
is.na(affs$FSG) == F )
cos = subset(affs,
is.na(affs$COS) == F )
###Correlations w/ double word norms
##FSG
cor.test(fsg$AFS, fsg$FSG) #.19
cor.test(fsg$AFSS, fsg$FSG) #-.08
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(cos$AFSS, cos$COS) #-.10
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
cuelist = unique(affs$Cue)
for(i in cuelist){
temp2 = subset(affs,
affS$Cue == i)
temp2 = temp2[order(temp2$AFS, decreasing = TRUE),]
temp2 = temp2[1, ]
temp = rbind(temp2, temp)
}
View(cue_table)
View(cue_table)
temp2 = subset(affs,
affS$Cue == i)
####Set up####
##read in data
affs = read.csv("Data/Affordance Norms_fsg.csv")
cue_table = read.csv("Data/Cue Table.csv")
##load libraries
library(psych)
library(dplyr)
##scientific notation
options(scipen = 999)
####Correlations####
##make the subsets
fsg = subset(affs,
is.na(affs$FSG) == F )
cos = subset(affs,
is.na(affs$COS) == F )
###Correlations w/ double word norms
##FSG
cor.test(fsg$AFS, fsg$FSG) #.19
cor.test(fsg$AFSS, fsg$FSG) #-.08
##COS
cor.test(cos$AFS, cos$COS) #.12
cor.test(cos$AFSS, cos$COS) #-.10
####Single Word Norms####
##get the strongest affordance pairing
temp = data.frame()
cuelist = unique(affs$Cue)
for(i in cuelist){
temp2 = subset(affs,
affs$Cue == i)
temp2 = temp2[order(temp2$AFS, decreasing = TRUE),]
temp2 = temp2[1, ]
temp = rbind(temp2, temp)
}
aff2 = temp
View(aff2)
View(aff2)
####Strongest AFS Pairs####
fsg2 = subset(aff2,
is.na(aff2$FSG) == F)
cos2 = subset(aff2,
is.na(aff2$COS) == F)
##semantic correlations
##FSG
cor.test(fsg2$AFS, fsg2$FSG) #.19
cor.test(fsg2$AFSS, fsg2$FSG) #-.08
##COS
cor.test(cos2$AFS, cos2$COS) #.12
cor.test(cos2$AFSS, cos2$COS) #-.10
View(aff2)
View(aff2)
View(cue_table)
###Lexical Correlations
##strongest affordance
combined = merge(aff2, cue_table, by.x = "Cue", by.y = "cues")
View(combined)
View(combined)
aff2[!(aff2 %in% cue_table)]
aff2[!(aff2$Cue %in% cue_table$cues)]
aff2$Cue[!(aff2$Cue %in% cue_table$cues)]
View(cue_table)
###Lexical Correlations
##strongest affordance
cue_table$cues = tolower(cue_table$cues)
combined = merge(aff2, cue_table, by.x = "Cue", by.y = "cues")
aff2$Cue = tolowe(aff2$Cue)
aff2$Cue = tolower(aff2$Cue)
combined = merge(aff2, cue_table, by.x = "Cue", by.y = "cues")
##set size
cor.test(combined$AFS, combined$BOI)
cor.test(combined$AFS, combined$Concrete)
cor.test(combined$AFS, combined$SUBTLEX)
cor.test(combined$AFS, combined$AoA)
##set size
cor.test(combined$AFSS, combined$BOI)
cor.test(combiend$AFSS, combined$Concrete)
cor.test(combined$AFSS, combined$Concrete)
cor.test(combined$AFSS, combined$SUBTLEX)
cor.test(combined$AFSS, combined$AoA)
