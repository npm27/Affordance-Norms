install.packages("ez")
install.packages("lrd")
install.packages("ggplot2")
install.packages("stringr")
install.packages("stringi")
install.packages("Hmisc")
install.packages("devtools")
install.packages("tidyverse")
install.package("memisc")
install.package("memesc")
install.package("memisc")
install.packages("memisc")
53-27
79-54
setwd("~/GitHub/BOI-Norms/4 Analyses/R")
####Set up####
##Combine data into master file
#Start w/ cleaned data
setwd("./Cleaned Data Sets")
files = list.files(pattern = "*.csv")
#read everything in and merge into one dataframe.
dat = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("..")
#Now do the pre-cleaning (this is to pull subIDs)
setwd("./Raw Data Sets")
files = list.files(pattern = "*.csv")
#read everything in and merge into one dataframe.
dat2 = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("..")
####Descriptives####
##Number of subjects
length(unique(dat2$ID)) #796
796/3000
#total number or responses (All tenses)
temp2 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
nrow(temp)
temp$RESPONSE_NUM = rep(nrow(temp))
temp2 = rbind(temp2, temp)
}
mean(temp2$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
sd(temp2$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
min(temp2$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
max(temp2$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
View(temp2)
temp3 = subset(temp2, temp2$CUE == "automobile")
View(temp3)
View(dat)
View(dat)
#Total number of unique responses to each cue (all tenses)
temp3 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
length(unique(temp$RESPONSE.LEMMA))
#temp$RESPONSE_NUM = rep(nrow(temp))
#temp3 = rbind(temp3, temp)
}
length(unique(temp$RESPONSE.LEMMA))
temp3 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
#temp3 = rbind(temp3, temp)
}
View(temp)
#Total number of unique responses to each cue (all tenses)
temp3 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp3 = rbind(temp3, temp)
}
View(temp3)
View(temp2)
sub = subset(temp3,
temp3$CUE == "automobile")
length(unique(sub$RESPONSE.LEMMA))
length(unique(sub$RESPONSE))
length(unique(sub$RESPONSE))
##get some descriptives
mean(temp3$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
sd(temp3$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
min(temp3$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
max(temp3$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
##Verbs only!
verbs = subset(dat,
dat$POS == "VERB")
temp7 = data.frame()
for(i in unique(verbs$CUE)){
temp = subset(verbs,
verbs$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp7 = rbind(temp7, temp)
}
##get some descriptives
mean(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
sd(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
min(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
max(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
View(temp7)
##total number of VERB responses
#make a verb subset
VERB = subset(dat,
dat$POS == "VERB")
temp4 = data.frame()
for(i in unique(VERB$CUE)){
temp = subset(VERB,
VERB$CUE == i)
nrow(temp)
temp$RESPONSE_NUM = rep(nrow(temp))
temp4 = rbind(temp4, temp)
}
mean(temp4$RESPONSE_NUM) ##On average, 7 verb responses
##total number of VERB responses
#make a verb subset
VERB = subset(dat,
dat$POS == "VERB")
temp4 = data.frame()
for(i in unique(VERB$CUE)){
temp = subset(VERB,
VERB$CUE == i)
nrow(temp)
temp$RESPONSE_NUM = rep(nrow(temp))
temp4 = rbind(temp4, temp)
}
View(temp4)
View(temp)
temp4 = data.frame()
temp4 = data.frame()
for(i in unique(VERB$CUE)){
temp = subset(VERB,
VERB$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp4 = rbind(temp4, temp)
}
mean(temp4$RESPONSE_NUM) ##On average, 7 verb responses
####Compute affordance strength####
##Eventually, I'll write a function for this (or a loop or something). But for now... Just going to pick my top three and get percentages
auto = subset(temp7,
temp7$CUE == "automobile")
View(auto)
