install.packages(lrd)
install.packages('lrd')
install.packages("ggplot2")
install.packages("ez")
install.packages("reshape")
install.packages("stringr")
install.packages("stringi")
58000/12
58000 - 19900
19900 * .10
38100 * .12
4572 + 1990
58000-6562
51438/12
4286.5-400-430
3456.5-1005-120-220-500-200-75-60-100-200-100-30-10
90*4
3456.5-836.5
690+210+360+200+200+50+60+100+100
1970 / 2620
851.12*2
1702.24+820
2522.24 / 3456.5
15 * 20
300 * 4
1000
1000+3456
25.48/4
6.37831
6.37831*31
4300 - 1700
900 - 250
18.22*20
364*4
1456*12
1456*24
4833 * .70
3383 - 1005 - 30 - 30 - 400 - 100 - 175 - 200 - 50 - 200
58000 - 4664
5336 * .22
53336 * .22
40525 * .22
58000 - (4664 + 8915.5)
44420.5/12
58000 - 1990
56010 * .12
6721.2+1990
58000 - 8711.2
49288 / 12
1600/200
8 * .01
8*200
8 * .01
.08 * 200
1600/2
1/800
200 * 0.00125
ink = function(x){x * 0.0025}
ink(200)
200 * 0.00125
ink(100)
ink(100)
ink(300100)
ink(100)
200 * 0.00125
ink = function(x){x * 0.00125}
ink(200)
##convert ink to dollars
ink2dollars = function(x){x * 0.00125}
ink(200)
##convert ink to dollars
ink2dollars = function(x){x * 0.00125}
ink2dollars(500)
3000*12
setwd("~/GitHub/BOI-Norms/4 Analyses/R")
####Set up####
##Combine data into master file
dat = read.csv("All_responses.csv")
####Descriptives####
##Number of subjects
length(unique(dat2$ID)) #796
####Descriptives####
##Number of subjects
length(unique(dat$ID)) #796
#read everything in and merge into one dataframe.
dat = read.csv("All_responses.csv")
#Now do the pre-cleaning (this is to pull subIDs)
setwd("./All Raw Data Sets")
files = list.files(pattern = "*.csv")
#read everything in and merge into one dataframe.
dat2 = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
#read everything in and merge into one dataframe.
dat2 = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("..")
getwd()
796
View(dat2)
length(unique(dat2$ID))
796
818/3000
#total number of responses to each cue (all tenses)
temp2 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
nrow(temp)
temp$RESPONSE_NUM = rep(nrow(temp))
temp2 = rbind(temp2, temp)
}
#Total number of unique responses to each cue (all tenses)
temp3 = data.frame()
for(i in unique(dat$CUE)){
temp = subset(dat,
dat$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp3 = rbind(temp3, temp)
}
##Verbs only!
verbs = subset(dat,
dat$POS == "VERB")
temp7 = data.frame()
for(i in unique(verbs$CUE)){
temp = subset(verbs,
verbs$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp7 = rbind(temp7, temp)
}
##get some descriptives
mean(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
sd(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
min(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
max(temp7$RESPONSE_NUM) ##Across all POS, each affordance has an average of 15 responses
##total number of VERB responses
#make a verb subset
VERB = subset(dat,
dat$POS == "VERB")
temp4 = data.frame()
for(i in unique(VERB$CUE)){
temp = subset(VERB,
VERB$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp4 = rbind(temp4, temp)
}
mean(temp4$RESPONSE_NUM) ##On average, 7 verb responses
sd(temp4$RESPONSE_NUM) ##On average, 7 verb responses
min(temp4$RESPONSE_NUM) ##On average, 7 verb responses
max(temp4$RESPONSE_NUM) ##On average, 7 verb responses
###total number of NOUN responses
NOUN = subset(dat,
dat$POS == "NOUN")
temp6 = data.frame()
for(i in unique(NOUN$CUE)){
temp = subset(NOUN,
NOUN$CUE == i)
x = length(unique(temp$RESPONSE.LEMMA))
temp$RESPONSE_NUM = rep(x, times = nrow(temp))
temp6 = rbind(temp6, temp)
}
mean(temp6$RESPONSE_NUM) #average of 8 NOUN responses
####Compute affordance strength####
##Eventually, I'll write a function for this (or a loop or something). But for now... Just going to pick my top three and get percentages
auto = subset(temp7,
temp7$CUE == "automobile")
table(auto$RESPONSE.LEMMA)
table(snow$RESPONSE.LEMMA)
snow = subset(temp7,
temp7$CUE == "snowfall")
table(snow$RESPONSE.LEMMA)
branch = subset(temp7,
temp7$CUE == "branch")
table(branch$RESPONSE.LEMMA)
